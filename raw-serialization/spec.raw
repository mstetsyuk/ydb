struct TMessageId {
    uint64_t SequenceId;
    uint64_t MsgId;
};

struct TTimestamps {
    uint64_t SentByDSProxyUs = 0,
    uint64_t ReceivedByVDiskUs = 0,
    uint64_t SentByVDiskUs = 0,
    uint64_t ReceivedByDSProxyUs = 0,
};

enum class EGetHandleClass {
    AsyncRead = 1,
    FastRead = 2,
    Discover = 3,
    LowRead = 4,
};

struct TActorId {
    uint64_t RawX1;
    uint64_t RawX2;
};

struct TExecTimeStats {
    uint64_t SubmitTimestamp;
    uint64_t InSenderQueue;
    uint64_t ReceivedTimestamp;
    uint64_t Total;
    uint64_t InQueue;
    uint64_t Execution;
    uint64_t HugeWriteTime;
};

enum class EStatus {
    Unknown = 0,
    Success = 1,
    WindowUpdate = 2,
    Processed = 3,
    IncorrectMsgId = 4,
    HighWatermarkOverflow = 5,
};

struct TWindowFeedback {
    EStatus Status;
    uint64_t ActualWindowSize;
    uint64_t MaxWindowSize;
    TMessageId ExpectedMsgId;
    TMessageId FailedMsgId;
};

enum class EVDiskQueueId {
    Unknown = 0,
    PutTabletLog = 1,
    PutAsyncBlob = 2,
    PutUserData = 3,
    GetAsyncRead = 4,
    GetFastRead = 5,
    GetDiscover = 6,
    GetLowRead = 7,
    Begin = 8,
    End = 9,
};

enum class EVDiskInternalQueueId {
    IntUnknown = 0,
    IntBegin = 1,
    IntGetAsync = 1,
    IntGetFast = 2,
    IntPutLog = 3,
    IntPutHugeForeground = 4,
    IntPutHugeBackground = 5,
    IntGetDiscover = 6,
    IntLowRead = 7,
    IntEnd = 8,
};

struct TVDiskCostSettings {
    uint64_t SeekTimeUs;
    uint64_t ReadSpeedBps;
    uint64_t WriteSpeedBps;
    uint64_t ReadBlockSize;
    uint64_t WriteBlockSize;
    uint32_t MinREALHugeBlobInBytes;
};

struct TMsgQoS {
    uint32_t DeadlineSeconds;
    TMessageId MsgId;
    uint64_t Cost;
    EVDiskQueueId ExtQueueId;
    EVDiskInternalQueueId IntQueueId;
    TVDiskCostSettings CostSettings;
    bool SendMeCostSettings;
    TWindowFeedback Window;
    uint32_t ProxyNodeId = 10;
    uint32_t ReplVDiskId = 11;
    uint64_t VDiskLoadId = 13;
    uint32_t VPatchVDiskId = 14;
    TExecTimeStats ExecTimeStats;
    TActorId SenderActorId;
};

struct TVDiskID {
    uint32_t GroupID;
    uint32_t GroupGeneration;
    uint32_t Ring;
    uint32_t Domain;
    uint32_t VDisk;
};

struct TLogoBlobID {
    uint64_t RawX1;
    uint64_t RawX2;
    uint64_t RawX3;
};

struct TRangeQuery {
    TLogoBlobID From;
    TLogoBlobID To;
    uint64_t Cookie;
    uint32_t MaxResults;
};

struct TExtremeQuery {
    TLogoBlobID Id;
    uint64_t Shift;
    uint64_t Size;
    uint64_t Cookie;
};

struct TTabletData {
    uint64_t Id;
    uint32_t Generation;
};

struct TEvVGet {
    TRangeQuery RangeQuery;
    TVDiskID VDiskID;
    bool NotifyIfNotReady;
    bool ShowInternals;
    uint64_t Cookie;
    TMsgQoS MsgQoS;
    bool IndexOnly = false;
    EGetHandleClass HandleClass;
    bool SuppressBarrierCheck = false;
    uint64_t TabletId = 0;
    bool AcquireBlockedGeneration = false;
    TTimestamps Timestamps;
    uint32_t ForceBlockedGeneration = 0;
    TTabletData ReaderTabletData;
    TTabletData ForceBlockTabletData;
    TString SnapshotId;
    TExtremeQuery ExtremeQueries; <repeated>
};
